"""task type and importance

Revision ID: 9a7b66d1a03b
Revises: ae3466a44ea4
Create Date: 2024-02-05 00:30:02.152841

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9a7b66d1a03b'
down_revision: Union[str, None] = 'ae3466a44ea4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_importance',
                    sa.Column('name', sa.String(length=20), nullable=False, comment='Уровень значимости задачи'),
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('task_type',
                    sa.Column('name', sa.String(length=20), nullable=False, comment='Тип задачи'),
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.add_column('tasks', sa.Column('task_type_id', sa.UUID(), nullable=False, comment='Тип задачи'))
    op.add_column('tasks', sa.Column('importance_id', sa.UUID(), nullable=False, comment='Значимость задачи'))
    op.create_foreign_key('task_type', 'tasks', 'task_type', ['task_type_id'], ['id'], onupdate='RESTRICT',
                          ondelete='RESTRICT')
    op.create_foreign_key('task_importance', 'tasks', 'task_importance', ['importance_id'], ['id'], onupdate='RESTRICT',
                          ondelete='RESTRICT')
    op.drop_column('tasks', 'importance')
    op.drop_column('tasks', 'task_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tasks', sa.Column('task_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False,
                                     comment='Тип задачи'))
    op.add_column('tasks', sa.Column('importance', sa.VARCHAR(length=10), autoincrement=False, nullable=False,
                                     comment='Значимость задачи'))
    op.drop_constraint('task_importance', 'tasks', type_='foreignkey')
    op.drop_constraint('task_type', 'tasks', type_='foreignkey')
    op.drop_column('tasks', 'importance_id')
    op.drop_column('tasks', 'task_type_id')
    op.create_table('goals',
                    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False, comment='Номер сотрудника'),
                    sa.Column('goal_name', sa.VARCHAR(length=500), autoincrement=False, nullable=False,
                              comment='Цель развития'),
                    sa.Column('employee_side_plus', sa.VARCHAR(length=500), autoincrement=False, nullable=False,
                              comment='Сильные стороны'),
                    sa.Column('employee_side_minus', sa.VARCHAR(length=500), autoincrement=False, nullable=False,
                              comment='Зоны развития'),
                    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'),
                              autoincrement=False, nullable=False),
                    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'),
                              autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_fkey', onupdate='CASCADE',
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', name='goals_pkey')
                    )
    op.drop_table('task_type')
    op.drop_table('task_importance')
    # ### end Alembic commands ###
